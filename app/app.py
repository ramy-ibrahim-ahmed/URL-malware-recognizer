import pandas as pd
import streamlit as st
from joblib import load
from xgboost import XGBClassifier
from feature_extractor import feature_extraction_pipeline, non_binary_columns

scaler = load(r"D:\Flothers\URL malware recognizer --agent\models\scaler_v1.pkl")

xgb_model_loaded = XGBClassifier()
xgb_model_loaded.load_model(r"D:\Flothers\URL malware recognizer --agent\models\xgb_model_v1.ubj")

st.title("URL Malware Recognizer")

url_input = st.text_input("Enter URL:", "")

if st.button("Analyze"):
    if url_input:
        # Extract features
        features = feature_extraction_pipeline(url_input)
        df = pd.DataFrame([features])

        # Scale
        non_binary_numerical_columns = non_binary_columns()
        df[non_binary_numerical_columns] = df[non_binary_numerical_columns].astype(float)
        df[non_binary_numerical_columns] = scaler.transform(df[non_binary_numerical_columns])

        # Predict
        prediction = xgb_model_loaded.predict(df)
        prediction_proba = xgb_model_loaded.predict_proba(df)

        if prediction[0] == 1:
            st.error("This URL is predicted to be malicious.")
        else:
            st.success("This URL is predicted to be benign.")

        # Format and display prediction probabilities
        malware_proba = prediction_proba[0][1] * 100
        benign_proba = prediction_proba[0][0] * 100
        st.write(f'Probability of being malicious: {malware_proba:.2f}%')
        st.write(f'Probability of being benign: {benign_proba:.2f}%')
    else:
        st.error("Please enter a URL.")
